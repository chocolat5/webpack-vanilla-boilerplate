// ================================================= */
// Mixins
// @include mixin-name($value)
// ================================================= */

//* Mediaquery
// --------------------------------------- */
@mixin mq($point) {
  @if map-has-key($breakpoints, $point) {
    @media screen and (min-width: map-get($breakpoints, $point)) {
      @content;
    }
  }

  @else {
    @media screen and (min-width: $point) { @content; }
  }
}



//* Container
// --------------------------------------- */
// 最大幅あり
@mixin container() {
  padding: 0 $pd-sm;
  margin: 0 auto;


  @include mq($main + 64px) {
    max-width: $main;
    padding: 0;
  }
}

// 最大幅なし
@mixin container-liquid {
  padding: $pd-sec-sm $pd-sm;

  @include mq(mid) {
    padding: $pd-sec-mid $pd-mid;
  }
}



//* Arrow
// --------------------------------------- */

@mixin arrow($direction: down, $size: 5px, $color: #fff) {
  content: '';
  display: inline-block;
  width: 0;
  height: 0;
  @if ($direction == left) {
    border-style: solid;
    border-width: $size $size $size 0;
    border-color: transparent $color transparent transparent;
  }
  @else if ($direction == right) {
    border-style: solid;
    border-width: $size 0 $size $size;
    border-color: transparent transparent transparent $color;
  }
  @else if ($direction == down) {
    border-style: solid;
    border-width: $size $size 0 $size;
    border-color: $color transparent transparent transparent;
  }
  @else {
    border-style: solid;
    border-width: 0 $size $size $size;
    border-color: transparent transparent $color transparent;
  }
}

@mixin arrow-brackets($size, $bold, $direction, $color: #fff) {
  content: '';
  display: inline-block;
  height: $size;
  width: $size;
  border-style: solid;
  border-width: $bold $bold 0 0;
  border-color: $color;

  //角度
  @if ( $direction == "left" ) { transform: rotate(-135deg); }
  @else if ( $direction == "right" ) { transform: rotate(45deg); }
  @else if ( $direction == "down" )  { transform: rotate(135deg); }
  @else if ( $direction == "up" )   { transform: rotate(-45deg); }

  @include mq(sm) {
    width: calc(#{$size '/'} 2);
    height: calc(#{$size '/'} 2);
  }
}



//* Background image for thumbnail
// --------------------------------------- */
@mixin aspect-ratio( $width, $height, $image: $noimg ) {
  display: block;
  width: 100%;
  height: 0;
  padding-top: calc((#{$height '/' $width}) * 100%);

  @if $image != null {
    background: url($image) 50% 50% / cover no-repeat;
  }

  @else {
    background-repeat: no-repeat;
    background-position: 50% 50%;
    background-size: cover;
  }
}



//* clearfix
// --------------------------------------- */
//@extend %clearfix;
@mixin clearfix {
  *zoom: 1;

  &:before,
  &:after {
    content: ' ';
    display: table;
  }

  &:after { clear: both; }
}


//* Form reset
// --------------------------------------- */
@mixin formReset {
  input, button, textarea, select {
    margin: 0;
    padding: 0;
    background: none;
    border: none;
    border-radius: 0;
    outline: none;
    appearance: none;
  }
}



//* Typography
// --------------------------------------- */
@mixin headline-base($size, $weight) {
  font-size: #{map-get($headlines-s, $size)}px;
  font-size: _rem(map-get($headlines-s, $size));
  font-weight: $weight;
  line-height: _line_height(map-get($headlines, $size));

  @if($size == h1) {
    margin-top: #{$line-height-base-px}px;
    margin-bottom: #{$line-height-base-px * 2}px;
  }
  @else if ($size == h2) {
    margin-top: #{$line-height-base-px * 2}px;
    margin-bottom: #{$line-height-base-px}px;
  }
  @else {
    margin-top: #{$line-height-base-px}px;
    margin-bottom: 0;
  }

  @include mq(sm) {
    font-size: #{map-get($headlines, $size)}px;
    font-size: _rem(map-get($headlines, $size));
  }

  &:first-of-type {
    margin-top: 0;
  }
}

//@include fs_vw(13, 320);
// p {
//   font-size: 13px;
//   font-size: 4.0625vw;
// }
// font-size with vw
@mixin fs_vw($font_size: 10, $viewport: 375) {
  font-size: $font_size * 1px;
  font-size: get_vw($font_size, $viewport);
}

// font-face
@mixin font-face($name, $file) {
   @font-face {
   font-family: "#{$name}";
   src: url("../fonts/#{$file}.eot");
   src: url("../fonts/#{$file}.eot?#iefix") format("embedded-opentype"),
   url("../fonts/#{$file}.woff") format("woff"),
   url("../fonts/#{$file}.ttf") format("truetype"),
   url("../fonts/#{$file}.svg?#webfont") format("svg");
 }
}


//* Grid
// --------------------------------------- */
@mixin grid($columns, $spacing, $rows: auto) {
  display: grid;

  @if $columns == 1 {
    grid-template-columns: 1fr;
    grid-template-rows: $rows;
    grid-gap: $spacing;
  }

  @else if $columns == 2 {
    grid-template-columns: 1fr 1fr;
    grid-template-rows: $rows;
    grid-gap: $spacing;
  }

  @else {
    grid-template-columns: repeat($columns, 1fr);
    grid-template-rows: $rows;
    grid-gap: $spacing;
  }
}

